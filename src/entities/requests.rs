//! SeaORM Entity. Generated by sea-orm-codegen 0.9.0

use super::sea_orm_active_enums::ResponseType;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "requests")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub uuid: String,
    pub client_id: i32,
    pub scope: String,
    pub redirect_uri: String,
    pub csrf_token: String,
    pub request_type: ResponseType,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::clients::Entity",
        from = "Column::ClientId",
        to = "super::clients::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Clients,
    #[sea_orm(has_many = "super::codes::Entity")]
    Codes,
}

impl Related<super::clients::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Clients.def()
    }
}

impl Related<super::codes::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Codes.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
